<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="doctor">
    
   	<!-- 
   	<resultMap type="departmentDTO" id="departmentMap">
	<result column="dep_num" property="dep_num"/>
	<result column="dep_name" property="dep_name"/>
	</resultMap>
	
	<resultMap type="doctorDTO" id="doctorMap">
		<result column="doctor_num" property="doctor_num" />
		<result column="d_id" property="d_id" />
		<result column="d_pwd" property="d_pwd" />
		<result column="d_name" property="d_name" />
		<result column="d_jumin_num" property="d_jumin_num" />
		<result column="d_phone_num" property="d_phone_num" />
		<result column="d_gender" property="d_gender" />
		<result column="d_zipcode" property="d_zipcode" />
		<result column="d_address1" property="d_address1" />
		<result column="d_address2" property="d_address2" />
		<result column="d_email" property="d_email" />
		<result column="d_licence" property="d_licence" />
		<result column="d_licence_num" property="d_licence_num" />
		<result column="d_regdate" property="d_regdate" />
		<result column="d_content" property="d_content" />
		<result column="d_imgfile" property="d_imgfile" />
		<result column="d_graduation" property="d_graduation" />
		<result column="d_career" property="d_career" />
		<result column="d_field" property="d_field" />
		<collection property="departmentDTO" resultMap="departmentMap"/>
	</resultMap>
 	  -->
  
 <!-- 김다유 : 의사 프로필 업데이트 d_photo=#{d_photo}, -->
  <update id="doctor_profile_settings" parameterType="doctorDTO">
  update dl_doctor set d_pwd = #{d_pwd} , 
  d_name = #{d_name} , d_gender = #{d_gender}, d_phone_num=#{d_phone_num}, d_email=#{d_email}, 
  d_graduation=#{d_graduation}, 
  d_career=#{d_career}, d_licence=#{d_licence}, d_licence_num=#{d_licence_num}, 
  d_content=#{d_content}, d_field=#{d_field} where doctor_num = #{doctor_num}
  </update>
   <!-- 의료진소개 -->
   
   <!-- 김다유 : 의사 정보 -->
  <select id="doctor_profile" parameterType="int" resultMap="doctorMap">
  	SELECT * FROM dl_doctor a JOIN department b ON a.dep_num = b.dep_num where doctor_num=#{doctor_num}
  </select>
   
 	<!-- 김성민 -->
 	<!-- 로그인 -->
	<select id="loginchk" parameterType="doctorDTO" resultType="doctorDTO">
		select doctor_num, d_id, d_name from dl_doctor where d_id=#{d_id} and d_pwd=#{d_pwd}
	</select>
	
 	<!-- 회원가입 -->
	<insert id="add" parameterType="doctorDTO">
		insert into dl_doctor(doctor_num, d_id, d_pwd, d_name, d_gender, d_jumin_num, d_phone_num, d_zipcode, d_address1, d_address2, d_email, d_photo) values(doctor_num.nextval,#{d_id}, #{d_pwd}, #{d_name}, #{d_gender}, #{d_jumin_num}, #{d_phone_num}, #{d_zipcode}, #{d_address1}, #{d_address2}, #{d_email}, #{d_photo})
	</insert>

	<!-- 아이디 중복 검사 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(*) from dl_doctor where d_id = #{d_id}
	</select>

	<!-- 회원가입 인증번호 검사 -->
	<select id="verifyCheck" parameterType="String" resultType="int">
		select count(*) from doctor_verify where d_verifynum = #{d_verifynum}
	</select>

	<!-- 아이디 중복 검사 -->
	<select id="check_id" parameterType="String" resultType="int">
		select count(*) from dl_doctor where d_id = #{d_id}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="find_id" parameterType="String" resultType="String">
		select d_id from dl_doctor where d_email = #{email}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="update_pw" parameterType="doctorDTO">
		update dl_doctor set d_pwd = #{d_pwd} where d_id = #{d_id}
	</update>

	<!-- 이메일 매칭용 -->
	<select id="emailCheck" parameterType="String" resultType="doctorDTO">
		select * from dl_doctor where d_id = #{id}
	</select>

  	<!-- search -->
  	 <!-- 의료진소개 페이징처리 및 필터링 -->
	  <select id="list" resultType="doctorDTO" parameterType="PageDTO">
	   select * from (
	   select rownum r_num, a.* from 
	   (
	   select * from dl_doctor 
	   <if test="searchType != null">
	   <where>
	   	<choose>
	   		<when test="searchType == 1">
	   			 d_gender = #{searchValue}
	   		</when>
	   		<when test="searchType == 2">
	   			dep_num = #{searchValue}
	   		</when>
	   	</choose>
	   </where>
	   </if>
	   
	   order by doctor_num desc
	   ) a
	   ) where r_num between #{start} and #{end}
	</select>
	<select id="totalCount" resultType="int" parameterType="PageDTO">
	  		select count(*) cnt from dl_doctor
	  		<if test="searchType != null">
	   <where>
	   	<choose>
	   		<when test="searchType == 1">
	   			 d_gender = #{searchValue}
	   		</when>
	   		<when test="searchType == 2">
	   			dep_num = #{searchValue}
	   			<!--  d_name like '%'|| #{searchValue} ||'%'-->
	   		</when>
	   	</choose>
	   </where>
	   </if>
	 </select>
	 
	 
	<!-- search 파라미터 값 있을 때 -->  
	<select id="searchList" resultMap="doctorMap">
		select a.*, b.*, c.*, nvl(b.rating, 0) as review_rating from
		dl_doctor a,
		(select doctor_num, round(avg(review_rating) ,0) as rating
		from doc_review group by doctor_num) b,
		department c  
		<where> 
		a.DEP_NUM=c.DEP_NUM and
		a.DOCTOR_NUM=b.doctor_num(+)
		<if test="d_genderList != null">
		and d_gender in
		<foreach collection="d_genderList" item="item" 
		index="index" separator="," open="(" close=")">
		#{item}
		</foreach>
		</if>
		<if test="dep_numList != null">
		and a.dep_num in
		<foreach collection="dep_numList" item="item"
		index="index" separator="," open="(" close=")">
		#{item}
		</foreach>
		</if>
		</where>
		order by D_NAME
	</select>
   
   	<resultMap type="departmentDTO" id="departmentMap">
	<id property="dep_num" column="dep_num" javaType="int" />
		<result column="dep_name" property="dep_name"/>
	</resultMap>

	<resultMap type="doctorDTO" id="doctorMap">
	<id property="doctor_num" column="doctor_num" javaType="int" />
		<result column="d_id" property="d_id" />
		<result column="d_pwd" property="d_pwd" />
		<result column="d_name" property="d_name" />
		<result column="d_jumin_num" property="d_jumin_num" />
		<result column="d_phone_num" property="d_phone_num" />
		<result column="d_gender" property="d_gender" />
		<result column="d_zipcode" property="d_zipcode" />
		<result column="d_address1" property="d_address1" />
		<result column="d_address2" property="d_address2" />
		<result column="d_email" property="d_email" />
		<result column="d_licence" property="d_licence" />
		<result column="d_licence_num" property="d_licence_num" />
		<result column="d_regdate" property="d_regdate" />
		<result column="d_content" property="d_content" />
		<result column="d_photo" property="d_photo" />
		<result column="d_graduation" property="d_graduation" />
		<result column="d_career" property="d_career" />
		<result column="d_field" property="d_field" />
		<collection property="departmentDTO" resultMap="departmentMap"/>
		<collection property="doc_ReviewDTO" resultMap="reviewMap"/>
	</resultMap>
	
	<resultMap type="doc_ReviewDTO" id="reviewMap">
		<result column="review_rating" property="review_rating"/>		
	</resultMap>

	<resultMap type="patientDTO" id="patientMap">
	<id property="patient_num" column="patient_num" javaType="int" />
		<result column="p_id" property="p_id" />
		<result column="p_pwd" property="p_pwd" />
		<result column="p_name" property="p_name" />
		<result column="p_jumin_num" property="p_jumin_num" />
		<result column="p_phone_num" property="p_phone_num" />
		<result column="bloodtype" property="bloodtype" />
		<result column="allergy" property="allergy" />
		<result column="p_email" property="p_email" />
		<result column="height" property="height" />
		<result column="weight" property="weight" />
		<result column="p_birth" property="p_birth" />
		<result column="p_gender" property="p_gender" />
		<result column="p_zipcode" property="p_zipcode" />
		<result column="p_address1" property="p_address1" />
		<result column="p_address2" property="p_address2" />
		<result column="p_phone" property="p_phone" />
		<result column="p_regdate" property="p_regdate" />
	</resultMap>
   
  
  </mapper>